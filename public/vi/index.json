[
{
	"uri": "//localhost:1313/vi/2-create-aws-resources/1-s3-and-cloudfront/",
	"title": "Tạo S3 Bucket và CloudFront",
	"tags": [],
	"description": "",
	"content": "NỘI DUNG Ở bước này bao gồm tạo S3 Bucket và CloudFront distribution để có thể truy cập và sử dụng nội dung.\nNỘI DUNG Tạo S3 Bucket Tải lên và xem ảnh/tệp tin/thư mục Tạo CloudFront Tạo S3 Bucket Trên thanh tìm kiếm, tìm kiếm S3 và nhấn chọn để vào màn hình console của dịch vụ S3 Bucket. Nhấn vào Create bucket để tạo S3 Bucket mới. Ở trang tạo S2 Bucket, điền tên Bucket muốn tạo và chọn ACLs disabled ở phần Object Ownership Tùy chọn ACLs (Access control list) disabled để cấu hình quyền sở hữu của tất cả các tệp, thư mục,\u0026hellip; trong S3 Bucket đều là của tài khoản AWS này. Tất cả truy cập, chỉnh sửa đối với các object bên trong đều được quy định nhờ các Policy (IAM Policies and Permissions). Điều này làm tăng tính cá nhân, bảo mật, an toàn cho dữ liệu.\nCác mục Public Access và Bucket Versioning để cấu hình mặc định. Chặn các truy cập public đảm bảo bảo mật, chỉ tương tác thông qua CloudFront, API (có xác thực).\nCác mục Tags, Default encryption (Mã hóa) và Advanced settings để cấu hình mặc định Nhấn Create bucket, S3 Bucket của bạn đã được tạo thành công. Tải lên và xem ảnh/tệp tin/thư mục Nhấn chọn nút Upload Chọn Add files/Add folder tương ứng loại object mà bạn muốn tải lên và nhấn Upload Upload thành công Có thể xem nội dung (đối với ảnh), hoặc tải về bằng nút Open. Có thể xem/tải xuống bằng URL ở Object URL nếu bỏ tùy chọn Block Public Access tương ứng (Ở mục tạo Bucket).\nTạo CloudFront Trên thanh tìm kiếm, tìm kiếm CloudFront và nhấn chọn để vào giao diện của dịch vụ AWS CloudFront. Nhấn Create distribution để tạo Distribution mới. Chọn Origin domain là domain của S3 Bucket đã tạo ở trên. Chọn OAC (Origin Access Control) tới S3 Bucket đã tạo. Nếu OAC chưa tồn tại thì nhấn Create new OAC để tạo mới. Các mục sau làm theo các bước dưới đây. Nhấn Create distribution để khởi tạo. Ở màn hình sau khởi tạo sẽ có hiện một cảnh, yêu cầu thêm policy để cấp quyền cho CloudFront có thể truy cập vào nội dung lưu trữ trong S3 Bucket. Nhấn Copy policy và quay lại giao diện quản lý của S3 Bucket. Chọn vào S3 Bucket đã tạo, nhấn vào tab Permissions và kéo xuống phần Bucket policy sau đó nhấn Edit. Dán Policy đã sao chép sau đó nhấn Save changes. Quay lại chi tiết của Distribution CloudFront vừa tạo xong (Hiển thị thời gian ở mục Last modified). Sao chép Distribution domain name của distribution (Dùng để truy cập các nội dung trên Origin domain). Truy cập xem/tải nội dung trong S3 Bucket bằng cách nhập url + đường dẫn tới tệp lưu trữ trên S3 (Trong thư mục con thì thêm \u0026lsquo;/\u0026rsquo;). Vậy là hoàn thành xong bước đầu tiên, tạo S3 Bucket và CloudFront để xem/sử dụng nội dung trong kho lưu trữ.\n"
},
{
	"uri": "//localhost:1313/vi/1-prerequisites/",
	"title": "Yêu cầu",
	"tags": [],
	"description": "",
	"content": "Nội dung:\nCó tài khoản AWS Sử dụng IAM Account để làm lab (Nên làm) Đã cài đặt Postman Có tài khoản AWS Đi đến trang Amazon Web Service homepage. Chọn Sign In to the Console ở góc trên bên phải. *Ghi Chú: Có thể là Create an AWS Account.* Nhập thông tin tài khoảng và chọn Continue. *Quan Trọng: Hãy chắc chắn bạn nhập đúng thông tin, đặc biệt là email.* Chọn loại account. *Ghi chú: Personal và Professional đều có chung tính năng.* Nhập thông tin công ty hoặc thông tin cá nhân của bạn. Đọc và đồng ý AWS Customer Agreement. Chọn Create Account và Continue. Sử dụng IAM Account để làm lab (Nên làm) Nếu đã dùng IAM Account thì có thể bỏ qua bước này\nTrong thanh tìm kiếm gõ IAM và chọn IAM sau đó chọn vào Users. Nếu chưa tồn tại User thì chọn Create user Điền thông tin , chọn ô Provide user access to the AWS Management Console - optional sau đó nhấn Next. Ở mục Attach policies directly tìm kiếm *AdministratorAccess và chọn sau đó tiếp tục Next. Xem lại các thông tin và nhấn Create user. Nhận tài khoản, mật khẩu, Console sign-in URL (có thể lưu lại) và dùng các thông tin để đăng nhập bằng IAM User. Tạo Access key cho user để có thể đăng nhập bằng CLI. (Chọn User cần tạo, vào mục Access key trong Security credentials)\nĐã cài đặt Postman "
},
{
	"uri": "//localhost:1313/vi/2-create-aws-resources/",
	"title": "Tạo các tài nguyên cần thiết",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ khởi tạo các tài nguyên cần thiết.\nĐầu tiên, tạo S3 Bucket để lưu trữ hình ảnh và CloudFront để có thể sử dụng các hình ảnh đã được lưu trữ.\nBước thứ hai là tạo Lambda với chức năng xóa tệp hình ảnh trong S3 (Serverless). Ở bước thứ ba sẽ tạo API Gateway để có thể tương tác với S3 Bucket thông qua API và S3 Bucket Integration để làm chức năng upload ảnh.\nNội Dung S3 Bucket và CloudFront Hàm Lambda API Gateway Kiến trúc tổng quan "
},
{
	"uri": "//localhost:1313/vi/2-create-aws-resources/2-lambda/",
	"title": "Tạo hàm Lambda",
	"tags": [],
	"description": "",
	"content": "Nội dung Ở bước này sẽ tạo một Lambda Function với chức năng xóa tệp chỉ định trên S3 Bucket.\nNội dung Tạo IAM Role cho phép Lambda có thể tương tác với S3 Bucket đã tạo Tạo hàm Lambda Tạo IAM Role cho phép Lambda có thể tương tác với S3 Bucket đã tạo Vào IAM Role và nhấn Create role để tạo Role mới cho Lambda. Chọn AWS service/Lambda, nhấn Next. Ở bước Add permissions tiếp tục nhấn Next. Đặt tên cho Role và review lại các tùy chọn sau đó nhấn Create role. Chọn Role vừa tạo, nhấn Add permissions -\u0026gt; Create inline policy để tạo Policy tùy chỉnh cho Role. JSON policy:\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;S3Interact\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:PutObject\u0026quot;,\r\u0026quot;s3:DeleteObject\u0026quot;,\r\u0026quot;s3:DeleteObjectVersion\u0026quot;,\r\u0026quot;s3:ListBucket\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::\u0026lt;your_s3_bucket_name\u0026gt;/*\u0026quot;\r]\r},\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: \u0026quot;logs:CreateLogGroup\u0026quot;,\r\u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot;\r},\r{\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;logs:CreateLogStream\u0026quot;,\r\u0026quot;logs:PutLogEvents\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:logs:*:*:log-group:/aws/lambda/*\u0026quot;\r]\r}\r]\r}\rChọn tab JSON và dán policy bên trên vào sau đó nhấn Next. Đặt tên và xem lại các tùy chọn, sau đó nhấn Create policy. Tạo hàm Lambda Trên thanh tìm kiếm, tìm Lambda và nhấn chọn để vào giao diện dịch vụ AWS Lambda, sau đó nhấn Create function. Cấu hình các thông tin cơ bản cho Lambda function (tên, ngôn ngữ lập trình,\u0026hellip;). Ở mục Execution role, chọn tùy chọn Use an existing role và nhấn chọn IAM Role chúng ta vừa tạo ở trên. Sau đó nhấn Create function. Đoạn code này có mục đích là xóa file chỉ định trong S3 bucket cụ thể. Với 2 biến bucketName và objectKey được lấy từ path parameter trong url.\nimport { S3Client, DeleteObjectCommand } from \u0026quot;@aws-sdk/client-s3\u0026quot;;\rexport const handler = async (event) =\u0026gt; {\rconst bucketName = event['pathParameters']['bucket']; const objectKey = event['pathParameters']['key']; const s3 = new S3Client();\rtry {\rconst command = new DeleteObjectCommand({\rBucket: bucketName,\rKey: objectKey\r});\rawait s3.send(command);\rconsole.log(`Successfully deleted ${objectKey} from ${bucketName}`);\rreturn {\rstatusCode: 200,\rbody: JSON.stringify({\rmessage: `Deleted object ${objectKey} successfully`\r})\r};\r} catch (error) {\rconsole.error(`Error deleting object ${objectKey} from ${bucketName}:`, error);\rreturn {\rstatusCode: 500,\rbody: JSON.stringify({\rmessage: `Failed to delete object`,\rerror: error.message\r})\r};\r}\r};\rDán mã nguồn bên trên vào phần Code của Lambda function vừa tạo rồi nhấn Deploy. Chúng ta vừa hoàn thành bước tạo Lambda function có chức năng xóa một object trong S3 Bucket.\n"
},
{
	"uri": "//localhost:1313/vi/2-create-aws-resources/3-api-gateway/",
	"title": "Tạo API Gateway",
	"tags": [],
	"description": "",
	"content": "Nội dung Ở bước này chúng ta sẽ tạo API Gateway. Cụ thể là 1 API sử dụng S3 Integration để upload tệp lên S3 bucket, API còn lại để kích hoạt Lambda function tạo ở bước trước đó để xóa tệp chỉ định trong S3 bucket.\nTạo Upload API (PUT) Trên thanh tìm kiếm, tìm API Gateway và nhấn chọn để vào trang của dịch vụ AWS API Gateway. Nhấn Create API, chọn REST API sau đó nhấn Build. Điền tên API, các tùy chọn còn lại để mặc định sau đó nhấn Create API. Tự động điều hướng sang trang quản lý API vừa tạo. Chọn \u0026lsquo;/\u0026rsquo; sau đó nhấn Create resource. Tương tự làm theo các bước như hình sau: Nhấn vào \u0026lsquo;/{key}\u0026rsquo; và chọn Create method. Với Upload file thì ở Method type chọn PUT, chọn Region tương ứng, để tương tác với S3 chúng ta chọn AWS Service là Simple Storage Service (S3). HTTP Method chọn PUT. Các bước sau làm theo hình. Ở Excution role, tạo 1 Role tương tự như cách tạo IAM Role cho Lambda nhưng AWS Service là API Gateway, với các policy tương ứng. Sau đó dán arn của IAM Role vào cho method. Chọn API key required ở phần mở rộng Method request settings sau đó nhấn Create method. Method được tạo thành công. Nhấn vào tab Integration request sau đó chọn Edit. Ở phần mở rộng URL path parameters, Add path parameter như hình . Sau đó nhấn Save changes. Name: bucket, Mapped from: method.request.path.bucket (tương ứng các parameters trên đường dẫn). Name: filekey, Mapped from: method.request.path.key (tương ứng các parameters trên đường dẫn). Chọn API settings ở thanh bên, sau đó nhấn Manage media types để thêm các loại dữ liệu binary API có thể nhận. Thêm các Binary media type sau để tương tác với các file dạng ảnh sau đó lưu lại. Ở tab Integration response của PUT method vừa tạo, chọn Edit. Ở phần mở rộng Mapping templates, có thể tùy chỉnh phản hồi của API. Ở đây, mình cấu hình API sẽ trả về đường dẫn CloudFront của file nếu upload thành công. Sau đó lưu lại. Quay lại trang của PUT method vừa tạo, chọn Deploy API. Chọn hoặc tạo mới Stage sau đó nhấn Deploy. Stage là các snapshot cho API. Ví dụ như api v1, api v2,...\rSau khi deploy thành công, chọn Stages bên thanh chức năng, nhấn vào API tương ứng để có thể xem đường dẫn gọi API Tiếp theo là các bước tạo API Key và Usage plan cho API. **API key** dùng để xác thực khi gọi API, tránh trường hợp API được gọi cho các mục đích xấu, sử dụng bởi những người không có quyền sở hữu. **Usage plan** sử dụng để hạn chế các hành vi như spam gọi API, quy định số yêu cầu đồng thời tới API...\rỞ thanh chức năng, chọn API keys sau đó nhấn Create API key. Điền tên API key rồi lưu lại. Sao chép API key vừa tạo. Ở phần Usage plan, nhấn Create usage plan. Điền các cấu hình mong muốn. Rate: Số request mỗi giây. Burst: Số request đồng thời. Requests: Số requests người dùng có thể yêu cầu trong một khoảng thời gian (mỗi ngày, mỗi tháng,\u0026hellip;). Sau đó nhấn Create usage plan. Quay lại APIs key, chọn API key vừa tạo sau đó nhấn Add to usage plan để gán API với Usage plan mong muốn. Ở tab Associated stages, chọn Add stage để thêm API đã Deploy có thể sử dụng Usage plan. Tạo Delete API (DELETE) Ở mục Resources bên thanh chức năng, chọn Create method. Chọn Method type là DELETE. Vì API kích hoạt Lambda function chúng ta đã tạo trước đó nên thực hiện cấu hình như hình dưới. Sau đó nhấn Create method. Delete API đã được tạo thành công. Tương tự tiến hành Deploy Delete API. Vậy là chúng ta đã tạo xong 2 API cho Upload và Delete. Giờ chúng ta sẽ tới bước thử nghiệm.\n"
},
{
	"uri": "//localhost:1313/vi/3-test-api/",
	"title": "Thử API bằng Postman",
	"tags": [],
	"description": "",
	"content": "Nội dung Ở bước cuối cùng này, chúng ta sẽ cùng thử các API Upload và Delete vừa tạo bằng ứng dụng Postman.\nThử API Upload (PUT) Chọn phương thức PUT, nhập đường dẫn API Upload (xem ở phần Stages). Trong body chọn file muốn tải lên sau đó nhấn Send. Như chúng ta thấy kết quả sẽ trả về Forbidden 403 vì chúng ta chưa thêm API key cho xác thực Giờ thêm API key trong mục Authorization và nhấn Send lần nữa. Giờ thì kết quả trả về giống với định dạng chúng ta làm trong phần Integration response, bao gồm status và url CloudFront của file vừa được upload. Nhấn vào url để xem ảnh. Vào S3 và chúng ta sẽ thấy ảnh vừa được upload. Thử API Delete (DELETE) Chọn phương thức DELETE, nhập đường dẫn API DELETE (xem ở phần Stages). Trong body chọn file muốn tải lên sau đó nhấn Send. Kết quả trả về là message thông báo đã xóa thành công. Vào S3 và chúng ta sẽ thấy file đã được xóa. Chúng ta đã hoàn thành việc tạo một kho lưu trữ ảnh đơn giản.\n"
},
{
	"uri": "//localhost:1313/vi/4-clean-resources/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Nội dung Sau khi hoàn thành, nếu không sử dụng chúng ta sẽ tiến hành dọn dẹp các tài nguyên đã tạo trong bài để tránh việc mất phí.\nXóa S3 Bucket Đầu tiên phải làm trống S3 Bucket muốn xóa, có thể dùng nút Empty ở bên ngoài thay vì xóa từng files. Tiếp theo chọn Delete và xác nhận xóa. Xóa Lambda function Xóa CloudFront Trước khi xóa phải disable distribution muốn xóa. (Quá trình này có thể mất vài phút) Xóa distribution bằng nút Delete. Xóa API Gateway Delete Stages. Delete API. "
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Kho lưu trữ ảnh Serverless đơn giản với AWS S3",
	"tags": [],
	"description": "",
	"content": "Lưu trữ ảnh đơn giản với S3 Bucket Tổng quan Trong bài lab này, các bạn sẽ sử dụng và làm quen với các dịch vụ của AWS như S3 Bucket, CloudFront, API Gateway, Lambda để tự tạo một kho lưu trữ ảnh đơn giản. Tương tác với các dữ liệu trong S3 Bucket thông qua REST API.\nS3 Bucket Amazon S3 (Simple Storage Service) là một dịch vụ lưu trữ đối tượng (object storage) của Amazon Web Services (AWS).\nCloudFront Amazon CloudFront là một dịch vụ phân phối nội dung (Content Delivery Network - CDN) của Amazon Web Services (AWS). CloudFront giúp cải thiện hiệu suất và tốc độ tải trang web, ứng dụng, và nội dung bằng cách phân phối các đối tượng (như tệp tin, hình ảnh, video) từ các vị trí gần với người dùng cuối (các Edge locations).\nLambda AWS Lambda là một dịch vụ điện toán serverless (không máy chủ) của Amazon Web Services (AWS). Lambda cho phép bạn chạy mã mà không cần phải quản lý máy chủ hoặc cấu hình cơ sở hạ tầng.\nAPI Gateway Amazon API Gateway là một dịch vụ của Amazon Web Services (AWS) giúp bạn dễ dàng tạo, triển khai, và quản lý các API (Application Programming Interface) cho ứng dụng và dịch vụ.\nNội dung chính Yêu cầu Tạo các tài nguyên AWS Thử nghiệm API với Postman Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]